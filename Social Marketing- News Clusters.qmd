---
title: "CSA Social Marketing: News Clusters"
format: 
  html:
    toc: true
self-contained: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = F, warning = F, message = F)
```

```{r}

# Load packages
pacman::p_load("tidyverse", 
  "readxl", 
  "ggplot2", 
  "factoextra", #K means, dendogram
  'heatmaply', #interactive heatmap
  'ggrepel', #cleaner plot labels
  'fastDummies', #make dummy variables
  'ggcorrplot', #correlation matrix
  "patchwork")
```


# Clustering News Topics

"Which topics are alike in terms of their audiences?"

```{r, fig.height=7, fig.width=7}
#| title: Correlation Matrix

dat = read_csv('News-Data.csv') %>% 
    drop_na() %>% 
    select(-`None of the above`)

gratifications = dat %>%
    select(`Aligns with my own values and point of view`:`Makes me hopeful`, ResponseId)

topics = dat %>% 
    select(`Climate and environment`:`Weather`, ResponseId)

characteristics = dat %>% 
  select(`It adds a little humor to news stories and events`:`It provides local context to national issues`, ResponseId)

# Demographics
demos <- read_csv("RUN-Demos.csv") %>%
  mutate(
    ResponseId = as.character(ResponseId),
    LGBTQ = ifelse(`LGBTQ+ identity` == "Yes", 1, 0),
    across(
    c(`American Indian or Alaskan Native`, Asian,
      `Black or African American`, `Hispanic or Latino`,
      `Middle Eastern or North African`, `Native Hawaiian or Pacific Islander`,
      `White or Caucasian`, Other),
    ~ ifelse(.x == "Selected", 1, 0))
  ) %>%
  dummy_cols(
    select_columns = c("Gender", "Urban designation", "Generation",
                       "Broadband access", "CivicEngagement",
                       "CulturalEngagement", "Political", 'Education', 'Income'),
    remove_selected_columns = TRUE,
    remove_first_dummy = FALSE,
    omit_colname_prefix = TRUE,
    ignore_na = TRUE
  ) %>% 
  select(-`LGBTQ+ identity`, -matches("(?i)other")) %>% 
  rename_with(~ sub(".*_", "", .x))
```

```{r}
# Create correlation matrix
corrmat <- topics %>%
    select(-ResponseId) %>%  
    cor()
```

## Optimal Number of Clusters

```{r}
#| title: Optimal number of clusters

fviz_nbclust(corrmat, kmeans, method = "silhouette") + ggtitle(label = 'Optimal number of clusters', subtitle = "K Means") 
# fviz_nbclust(corrmat, hcut, method = "silhouette") + ggtitle(label = 'Optimal number of clusters', subtitle = "Hierarchical clustering")
```

```{r}
#| title: HCLust 4
#| fig.width: 12
#| fig.height: 10
#| fig.asp: null
#| eval: false

#run hierarchical clustering
hc = hclust(dist(corrmat), method = 'ward.D')

#plot correlation matrix
heatmaply(corrmat, 
  limits = c(-1,1), 
  Rowv = as.dendrogram(hc),
  Colv = as.dendrogram(hc), 
  k_row = 7,
  k_col = 7,
  colors = colorRampPalette(c("red", "white", "forestgreen"))(200),
  fontsize_row = 8,
  fontsize_col = 8,
  column_text_angle = 90)
```

## K Means Clusters in PCA Space

```{r}
#| title: K Means

#run k-means
k_means = kmeans(corrmat, centers = 7, nstart = 20)

#plot clusters
fviz_cluster(k_means, corrmat, show.clust.cent = F) + 
    theme_classic() +
    geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
    geom_hline(yintercept = 0, linetype = "dashed", color = "grey40")
```

### PC & Quadrant Interpretations
These PC and quadrant interpretations reflect relations between the news topic clusters: what are the connecting threads between news topics in different parts of the news space? What dimensions differentiate between news topic clusters in this news space?


- PC1 (Psychological Distance)
  - ⬅️ Broad Systemic Issues 
  - ➡️ Immediate/Current Civic Events
- PC2 (Issue Scale)
  - ⬆️ Local scale
  - ⬇️ Large scale 


<div style="text-align:center;">
  <table style="width:70%; margin:auto; text-align:center; border-collapse:collapse; border:1px solid black;">
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↖️<br><strong>Community & social infrastructure</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↗️<br><strong>Civic & local daily life</strong>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↙️<br><strong>Analytical & global systems</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↘️<br><strong>Political & public affairs</strong>
      </td>
    </tr>
  </table>
</div>.



*Note: some clusters will cross quadrants. See Cluster 5 for example. Transportation and traffic being clustered together suggests these two topics are more related to each other than to other topics. But the transportation topic sits in the Social infrastructure/broad issue/local scale quadrant while traffit sits in the Everyday/Local scale quadrant. So within this cluster specifically about movement-related news topics, some are more large scale than others.*

*Similarly within Cluster 2, Economy is closer to the analytical/global systems quadrant than its other connected topics (immigration, politics/gov, global affairs). Same thing with Climate and Environment compared to Housing/Homelessness and Social Justice within Cluster 1.*

## Biplot comparing to news gratifications

```{r}
# run PCA
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(topics %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(gratifications, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(gratifications), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.05 | abs(PC2) > 0.05)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +               

  # Aesthetics
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  ) 

```

### PC & Quadrant Interpretations (for arrows)

These PC and quadrant interpretations do not necessarily account for or need to exactly match the previous PC interpretations which are more about the relations between news topics. These  interpretations are more about the gratification arrows (what is news for? what do people hope to get out of it?). The critical insight here is how these gratifications orient when laid on top of the news topic space.

You can compare to the previous news topic-based PC dimensions to see how these gratification-based dimensions relate to those. So while the dimensions themselves don't have to match, there will likely be functional or conceptual relationships and symmetries between the news topic PCs and these gratification PCs (if the data & analysis is capturing something meaningful).

- PC1 (Function)
  - ⬅️ Uplift/Improvement
  - ➡️ Pragmatic
- PC2 (Modality)
  - ⬆️ Affective
  - ⬇️ Cognitive/Intellectual


<div style="text-align:center;">
  <table style="width:70%; margin:auto; text-align:center; border-collapse:collapse; border:1px solid black;">
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↖️<br><strong>News as empowerment</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↗️<br><strong>News as daily tool</strong>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↙️<br><strong>News as personal enrichment</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↘️<br><strong>News as moral-intellectual information</strong>
      </td>
    </tr>
  </table>
</div>

## Biplot comparing to news characteristics

```{r}
# run PCA
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(topics %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(characteristics, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(characteristics), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.05 | abs(PC2) > 0.05)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +               

  # Aesthetics
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  ) 

```

### PC and Quadrant Interpretations (for arrows)

 These PC and quadrant interpretations are about the characteristic arrows (what qualities of the news do people seek/like?). How do these news characteristic preferences orient when laid on top of the news topic space.

- PC1 (Epistemic)
  - ⬅️ Opinionated/Entertaining
  - ➡️ Factual/Informational
- PC2 (Tone)
  - ⬆️ Affective
  - ⬇️ Analytical


<div style="text-align:center;">
  <table style="width:70%; margin:auto; text-align:center; border-collapse:collapse; border:1px solid black;">
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↖️<br><strong>Opinionated engaging news</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↗️<br><strong>Purely practical news</strong>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↙️<br><strong>Analytical/perspective news</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↘️<br><strong>Serious news</strong>
      </td>
    </tr>
  </table>
</div>.


*Note: no arrows point to upper-right quadrant, which means none of the news characteristics are positively associated with the combination of dimensions: factual/information + affectvive. Suggests everyday news is viewed as practical but not tied to distinctive content qualities — neither exciting nor intellectually rich, just plain useful information — high in relevance, low in personality.*

## Biplot comparing to demographics

```{r}
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(topics %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(demos, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(demos), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.1 | abs(PC2) > 0.1)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +
  # Aesthetics 
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  ) 

```

### PC and Quadrant Interpretations (for arrows)

 These PC and quadrant interpretations are about the demographic arrows, how do respondent demographics orient when laid on top of the news topic space.

- PC1 (Age/politics)
  - ⬅️ Younger, diverse progressives
  - ➡️ Older, whiter, traditionalists
- PC2 (Gender/income/education)
  - ⬆️ Less well-off
  - ⬇️ More well-off



# Clustering news gratifications

"Which gratifications are alike in terms of their seekers?"

```{r}
# Create correlation matrix
corrmat <- gratifications %>%
    select(-ResponseId) %>%  
    cor()
```

## Optimal number of clusters

```{r}
#| title: Optimal number of clusters

fviz_nbclust(corrmat, kmeans, method = "silhouette") + ggtitle(label = 'Optimal number of clusters', subtitle = "K Means") +
fviz_nbclust(corrmat, hcut, method = "silhouette") + ggtitle(label = 'Optimal number of clusters', subtitle = "Hierarchical clustering")
```

## Hierarchical clustering

```{r}
#| title: HCLust 4
#| fig.width: 12
#| fig.height: 10
#| fig.asp: null

#run hierarchical clustering
hc = hclust(dist(corrmat), method = 'ward.D')


#plot correlation matrix
heatmaply(corrmat, 
  limits = c(-1,1), 
  Rowv = as.dendrogram(hc),
  Colv = as.dendrogram(hc), 
  k_row = 3,
  k_col = 5,
  colors = colorRampPalette(c("red", "white", "forestgreen"))(200),
  fontsize_row = 8,
  fontsize_col = 8,
  column_text_angle = 90)
```


## K Means 

```{r}
#| title: K Means

#run k-means
k_means = kmeans(corrmat, centers = 5, nstart = 20)

#plot clusters
fviz_cluster(k_means, corrmat, show.clust.cent = F) + 
    theme_classic() +
    geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
    geom_hline(yintercept = 0, linetype = "dashed", color = "grey40")
```

PC1 = Self-enhacement/affirming (left) vs. Civic-altruistic (right)
PC2 = Affective/Moral (Top) vs. Cognitive/Pragmatic (Bottom)

## Biplot comparing to news topics

```{r}
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(gratifications %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(topics, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(topics), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.00 | abs(PC2) > 0.00)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +
  
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  )

```

### PC1: Self-affirming ↔ Civic/functional

Topics leaning right (positive PC1) → Weather, Local news, Politics, Global affairs, Crime.

These are civic or everyday-life topics — practical, outward-facing.

Topics leaning left (negative PC1) → Education, Technology, Transportation.

These are systemic or analytical topics — more reflective or issue-oriented.

➡️ Interpretation:

PC1 separates individual reflection / complexity (education, technology) from public-facing, utilitarian, civic news (weather, politics, local).

### PC2: Practical ↔ Emotional/moral

Nearly every topic has positive PC2 correlations — but some are distinctly higher:

Social justice (+0.24), Housing (+0.20), Climate (+0.17), Education (+0.16), Science (+0.13).

These are community-impact / moral-purpose topics — they resonate with empathy and social good.

Lower PC2 (≈0): Weather, Politics, Local events — factual or pragmatic.

➡️ Interpretation:

PC2 represents how much a topic evokes moral, empathic, or humanistic engagement rather than pragmatic utility.


## Biplot comparing to news characteristics

```{r}
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(gratifications %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(characteristics, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(characteristics), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.05 | abs(PC2) > 0.05)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +
  
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  )

```

Nearly all valued news qualities align with emotion and meaning, not cold cognition.

The main fault line is personal vs. civic orientation (PC1):

Identity-based enjoyment (entertaining, partisan, familiar) vs.

Civic-informational integrity (balanced, trustworthy, perspective-broadening).

PC2 adds a second layer — within both camps, people prize emotional or moral resonance over detached utility.

In the news gratifications space, people see news quality not as “useful vs. not useful,” but as serving two kinds of meaning:

On one side, self-expression and affirmation (entertaining, values-aligned news).

On the other, civic and moral engagement (trustworthy, balanced, perspective-broadening news).

Both are emotionally loaded — but differ in who the emotion serves: the self or the public.


## Biplot comparing to demographics

```{r}
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(gratifications %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(demos, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(demos), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.1 | abs(PC2) > 0.1)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +
  
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  )

```

PC1 may reflect a generational divide:

Boomers = civic sense-making; Millennials = identity-driven meaning-making.

PC2 may distinguish moral-emotional engagement vs. utilitarian use of news.


# Clustering news characteristics

"Which characteristics are alike in terms of their admirers?"

```{r}
# Create correlation matrix
corrmat <- characteristics %>%
    select(-ResponseId) %>%  
    cor()
```

## Optimal number of clusters

```{r}
#| title: Optimal number of clusters

fviz_nbclust(corrmat, kmeans, method = "silhouette") + ggtitle(label = 'Optimal number of clusters', subtitle = "K Means") +
fviz_nbclust(corrmat, hcut, method = "silhouette") + ggtitle(label = 'Optimal number of clusters', subtitle = "Hierarchical clustering")
```

## Hierarchical clustering

```{r}
#| title: HCLust 4
#| fig.width: 12
#| fig.height: 10
#| fig.asp: null

#run hierarchical clustering
hc = hclust(dist(corrmat), method = 'ward.D')


#plot correlation matrix
heatmaply(corrmat, 
  limits = c(-1,1), 
  Rowv = as.dendrogram(hc),
  Colv = as.dendrogram(hc), 
  k_row = 2,
  k_col = 5,
  colors = colorRampPalette(c("red", "white", "forestgreen"))(200),
  fontsize_row = 8,
  fontsize_col = 8,
  column_text_angle = 90)
```


## K Means 

```{r}
#| title: K Means

#run k-means
k_means = kmeans(corrmat, centers = 5, nstart = 20)

#plot clusters
fviz_cluster(k_means, corrmat, show.clust.cent = F) + 
    theme_classic() +
    geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
    geom_hline(yintercept = 0, linetype = "dashed", color = "grey40")
```


## Biplot comparing to news topics

```{r}
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(characteristics %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(topics, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(topics), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.00 | abs(PC2) > 0.00)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +
  
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  )

```

### PC1 (x-axis): Journalistic integrity ↔ Emotional–partisan

Nearly all topics are on the positive (trustworthy) side of PC1.

The strongest on that side:
→ Global affairs, Local news, Weather, Politics, Science.

The few at or slightly below zero (Education, Technology, Sports) are lighter, more human-interest or practical rather than high-seriousness.

➡️ Interpretation:
Respondents associate most news topics with “serious, fact-based, trustworthy” qualities rather than “partisan or entertaining.”
Only sports and education fall slightly toward the softer side.

### PC2 (y-axis): Comforting / Familiar ↔ Challenging / Novel

PC2 is mostly negative across topics (−0.10 to +0.05).
So, most arrows point downward, toward the “challenging” end.

The few positive outliers (Weather, Politics, Local) are familiar, routine, comforting topics.

The negative ones (Climate, Housing, Technology, Education) are more cognitively or morally demanding.

➡️ Interpretation:
People see certain “issue” topics as stretching or challenging (climate, housing, tech, education), whereas local, weather, and political coverage feels habitual, predictable, or reassuring.


## Biplot comparing to news gratifications

```{r}
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(characteristics %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(gratifications, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(gratifications), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.00 | abs(PC2) > 0.00)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +
  
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  )

```

### PC1: Journalistic integrity ↔ Entertainment/partisan appeal

Positive PC1 (right): “Exposes me to other viewpoints,” “Prepares me for public life,” “Helps me empathize.”
→ These gratifications align with civic-minded, informative, trust-based news.

Negative PC1 (left): “Aligns with my values,” “Makes me feel seen and heard,” “Makes me feel smart.”
→ These point toward personal validation, identity expression, and affective reward rather than information quality.

🧠 Interpretation:

PC1 differentiates informational and civic gratifications (right) from identity and self-affirming gratifications (left).

### PC2: Comforting/familiar ↔ Challenging/novel

Negative PC2 (down): Most arrows point downward here — “Exposes me to other viewpoints,” “Helps me empathize,” “Become better person.”
→ These link to news that challenges or broadens understanding.

Positive PC2 (up): Only “Aligns with my own values” has a clear positive score.
→ This one connects with comforting or familiar news — that reinforces one’s worldview.

🧠 Interpretation:

PC2 separates comforting, worldview-affirming engagement (up) from learning and moral challenge (down).


## Biplot comparing to demographics

```{r}
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(characteristics %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(demos, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(demos), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.05 | abs(PC2) > 0.05)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +
  
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  )

```

### PC1: Serious / trustworthy ↔ Partisan / entertaining

Positive (right): Boomers, Whites, civically or culturally engaged, liberals → traditional journalism trusters.
They gravitate toward balanced, fact-based news.

Negative (left): Millennials, Gen Z, conservatives, low-engagement respondents → partisan or affective consumers.
They’re more drawn to opinionated, emotive, or personality-driven news.

🧠 Interpretation:

PC1 divides traditional trust-oriented audiences from expressive, identity-based news consumers.

### PC2: Comforting / familiar ↔ Challenging / novel

Positive (up): Boomers, Whites, less urban → comforting, predictable, reassuring news preferences.

Negative (down): Black respondents, urban, younger cohorts → open to novel, critical, or challenging journalism.

🧠 Interpretation:

PC2 separates comfort-seeking, familiar news users from those who seek new or challenging perspectives.