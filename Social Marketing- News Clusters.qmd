---
title: "CSA Social Marketing: News Clusters"
format: 
  html:
    toc: true
self-contained: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = F, warning = F, message = F)
```

```{r}

# Load packages
pacman::p_load("tidyverse", 
  "readxl", 
  "ggplot2", 
  "factoextra", #K means, dendogram
  'heatmaply', #interactive heatmap
  'ggrepel', #cleaner plot labels
  'fastDummies', #make dummy variables
  'ggcorrplot', #correlation matrix
  "patchwork")
```


# Clustering News Topics

"Which topics are alike in terms of their audiences?"

```{r, fig.height=7, fig.width=7}
#| title: Correlation Matrix

dat = read_csv('News-Data.csv') %>% 
    drop_na() %>% 
    select(-`None of the above`)

gratifications = dat %>%
    select(`Aligns with my own values and point of view`:`Makes me hopeful`, ResponseId)

topics = dat %>% 
    select(`Climate and environment`:`Weather`, ResponseId)

characteristics = dat %>% 
  select(`It adds a little humor to news stories and events`:`It provides local context to national issues`, ResponseId)

# Demographics
demos <- read_csv("RUN-Demos.csv") %>%
  mutate(
    ResponseId = as.character(ResponseId),
    LGBTQ = ifelse(`LGBTQ+ identity` == "Yes", 1, 0),
    across(
    c(`American Indian or Alaskan Native`, Asian,
      `Black or African American`, `Hispanic or Latino`,
      `Middle Eastern or North African`, `Native Hawaiian or Pacific Islander`,
      `White or Caucasian`, Other),
    ~ ifelse(.x == "Selected", 1, 0))
  ) %>%
  dummy_cols(
    select_columns = c("Gender", "Urban designation", "Generation",
                       "Broadband access", "CivicEngagement",
                       "CulturalEngagement", "Political", 'Education', 'Income'),
    remove_selected_columns = TRUE,
    remove_first_dummy = FALSE,
    omit_colname_prefix = TRUE,
    ignore_na = TRUE
  ) %>% 
  select(-`LGBTQ+ identity`, -matches("(?i)other")) %>% 
  rename_with(~ sub(".*_", "", .x))
```

```{r}
# Create correlation matrix
corrmat <- topics %>%
    select(-ResponseId) %>%  
    cor()
```

## Optimal Number of Clusters

```{r}
#| title: Optimal number of clusters

fviz_nbclust(corrmat, kmeans, method = "silhouette") + ggtitle(label = 'Optimal number of clusters', subtitle = "K Means") 
# fviz_nbclust(corrmat, hcut, method = "silhouette") + ggtitle(label = 'Optimal number of clusters', subtitle = "Hierarchical clustering")
```

```{r}
#| title: HCLust 4
#| fig.width: 12
#| fig.height: 10
#| fig.asp: null
#| eval: false

#run hierarchical clustering
hc = hclust(dist(corrmat), method = 'ward.D')

#plot correlation matrix
heatmaply(corrmat, 
  limits = c(-1,1), 
  Rowv = as.dendrogram(hc),
  Colv = as.dendrogram(hc), 
  k_row = 7,
  k_col = 7,
  colors = colorRampPalette(c("red", "white", "forestgreen"))(200),
  fontsize_row = 8,
  fontsize_col = 8,
  column_text_angle = 90)
```

## K Means Clusters in PCA Space

```{r}
#| title: K Means

#run k-means
k_means = kmeans(corrmat, centers = 7, nstart = 20)

#plot clusters
fviz_cluster(k_means, corrmat, show.clust.cent = F) + 
    theme_classic() +
    geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
    geom_hline(yintercept = 0, linetype = "dashed", color = "grey40")
```

### PC & Quadrant Interpretations
These PC and quadrant interpretations reflect relations between the news topic clusters: what are the connecting threads between news topics in different parts of the news space? What dimensions differentiate between news topic clusters in this news space?


- PC1 (Psychological Distance)
  - ⬅️ Broad Systemic Issues 
  - ➡️ Immediate/Current Civic Events
- PC2 (Issue Scale)
  - ⬆️ Local scale
  - ⬇️ Large scale 


<div style="text-align:center;">
  <table style="width:70%; margin:auto; text-align:center; border-collapse:collapse; border:1px solid black;">
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↖️<br><strong>Community & social infrastructure</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↗️<br><strong>Civic & local daily life</strong>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↙️<br><strong>Analytical & global systems</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↘️<br><strong>Political & public affairs</strong>
      </td>
    </tr>
  </table>
</div>.



*Note: some clusters will cross quadrants. See Cluster 5 for example. Transportation and traffic being clustered together suggests these two topics are more related to each other than to other topics. But the transportation topic sits in the Social infrastructure/broad issue/local scale quadrant while traffit sits in the Everyday/Local scale quadrant. So within this cluster specifically about movement-related news topics, some are more large scale than others.*

*Similarly within Cluster 2, Economy is closer to the analytical/global systems quadrant than its other connected topics (immigration, politics/gov, global affairs). Same thing with Climate and Environment compared to Housing/Homelessness and Social Justice within Cluster 1.*

## Biplot comparing to news gratifications

```{r}
# run PCA
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(topics %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(gratifications, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(gratifications), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.05 | abs(PC2) > 0.05)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +               

  # Aesthetics
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  ) 

```

### PC & Quadrant Interpretations (for arrows)

These PC and quadrant interpretations do not necessarily account for or need to exactly match the previous PC interpretations which are more about the relations between news topics. These  interpretations are more about the gratification arrows (what is news for? what do people hope to get out of it?). The critical insight here is how these gratifications orient when laid on top of the news topic space.

You can compare to the previous news topic-based PC dimensions to see how these gratification-based dimensions relate to those. So while the dimensions themselves don't have to match, there will likely be functional or conceptual relationships and symmetries between the news topic PCs and these gratification PCs (if the data & analysis is capturing something meaningful).

- PC1 (Function)
  - ⬅️ Uplift/Improvement
  - ➡️ Pragmatic
- PC2 (Modality)
  - ⬆️ Affective
  - ⬇️ Cognitive/Intellectual


<div style="text-align:center;">
  <table style="width:70%; margin:auto; text-align:center; border-collapse:collapse; border:1px solid black;">
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↖️<br><strong>News as empowerment</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↗️<br><strong>News as daily tool</strong>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↙️<br><strong>News as personal enrichment</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↘️<br><strong>News as moral-intellectual information</strong>
      </td>
    </tr>
  </table>
</div>

## Biplot comparing to news characteristics

```{r}
# run PCA
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(topics %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(characteristics, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(characteristics), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.05 | abs(PC2) > 0.05)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +               

  # Aesthetics
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  ) 

```

### PC and Quadrant Interpretations (for arrows)

 These PC and quadrant interpretations are about the characteristic arrows (what qualities of the news do people seek/like?). How do these news characteristic preferences orient when laid on top of the news topic space.

- PC1 (Epistemic)
  - ⬅️ Opinionated/Entertaining
  - ➡️ Factual/Informational
- PC2 (Tone)
  - ⬆️ Affective
  - ⬇️ Analytical


<div style="text-align:center;">
  <table style="width:70%; margin:auto; text-align:center; border-collapse:collapse; border:1px solid black;">
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↖️<br><strong>Opinionated engaging news</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↗️<br><strong>Purely practical news</strong>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↙️<br><strong>Analytical/perspective news</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↘️<br><strong>Serious news</strong>
      </td>
    </tr>
  </table>
</div>.


*Note: no arrows point to upper-right quadrant, which means none of the news characteristics are positively associated with the combination of dimensions: factual/information + affectvive. Suggests everyday news is viewed as practical but not tied to distinctive content qualities — neither exciting nor intellectually rich, just plain useful information — high in relevance, low in personality.*

## Biplot comparing to demographics

```{r}
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(topics %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(demos, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(demos), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.1 | abs(PC2) > 0.1)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +
  # Aesthetics 
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  ) 

```

### PC and Quadrant Interpretations (for arrows)

 These PC and quadrant interpretations are about the demographic arrows, how do respondent demographics orient when laid on top of the news topic space.

- PC1 (Age/politics)
  - ⬅️ Younger, diverse progressives
  - ➡️ Older, whiter, traditionalists
- PC2 (Gender/income/education)
  - ⬆️ Less well-off
  - ⬇️ More well-off

<div style="text-align:center;">
  <table style="width:70%; margin:auto; text-align:center; border-collapse:collapse; border:1px solid black;">
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↖️<br><strong>Less Well Off Progressives</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↗️<br><strong>Less Well Off Traditionalists</strong>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↙️<br><strong>Well Off Progressives</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↘️<br><strong>Well Off Traditionalists</strong>
      </td>
    </tr>
  </table>
</div>

# Clustering news gratifications

"Which gratifications are alike in terms of their needers?"

```{r}
# Create correlation matrix
corrmat <- gratifications %>%
    select(-ResponseId) %>%  
    cor()
```

## Optimal number of clusters

```{r}
#| title: Optimal number of clusters

fviz_nbclust(corrmat, kmeans, method = "silhouette") + ggtitle(label = 'Optimal number of clusters', subtitle = "K Means") 
# fviz_nbclust(corrmat, hcut, method = "silhouette") + ggtitle(label = 'Optimal number of clusters', subtitle = "Hierarchical clustering")
```

```{r}
#| title: HCLust 4
#| fig.width: 12
#| fig.height: 10
#| fig.asp: null
#| eval: false

#run hierarchical clustering
hc = hclust(dist(corrmat), method = 'ward.D')


#plot correlation matrix
heatmaply(corrmat, 
  limits = c(-1,1), 
  Rowv = as.dendrogram(hc),
  Colv = as.dendrogram(hc), 
  k_row = 3,
  k_col = 5,
  colors = colorRampPalette(c("red", "white", "forestgreen"))(200),
  fontsize_row = 8,
  fontsize_col = 8,
  column_text_angle = 90)
```


## K Means 

```{r}
#| title: K Means

#run k-means
k_means = kmeans(corrmat, centers = 5, nstart = 20)

#plot clusters
fviz_cluster(k_means, corrmat, show.clust.cent = F) + 
    theme_classic() +
    geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
    geom_hline(yintercept = 0, linetype = "dashed", color = "grey40")
```

### PC and Quadrant Interpretations

- PC1 (Orientation)
  - ⬅️ Self-enhancement/Affirming
  - ➡️ Civic/Relational
- PC2 (Function)
  - ⬆️ Affective/Moral
  - ⬇️ Cognitive/Pragmatic


<div style="text-align:center;">
  <table style="width:70%; margin:auto; text-align:center; border-collapse:collapse; border:1px solid black;">
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↖️<br><strong>Self Uplift</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↗️<br><strong>Communal Connection</strong>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↙️<br><strong>Intellectual Affirmation</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↘️<br><strong>Civic Pragmatism</strong>
      </td>
    </tr>
  </table>
</div>

## Biplot comparing to news topics

```{r}
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(gratifications %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(topics, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(topics), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.00 | abs(PC2) > 0.00)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +
  
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  )

```

### PC and Quadrant Interpretations (for arrows)

- PC1 (Psychological Distance)
  - ⬅️ Broad systemtic issues
  - ➡️ Immediate/Current Civic Events
- PC2 (Function)
  - ⬆️ Moral?
  - ⬇️ Practical??


<div style="text-align:center;">
  <table style="width:70%; margin:auto; text-align:center; border-collapse:collapse; border:1px solid black;">
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↖️<br><strong>Systemic Issues News</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↗️<br><strong>Current Events/Immediate News</strong>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↙️<br><strong>-</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↘️<br><strong>-</strong>
      </td>
    </tr>
  </table>
</div>


## Biplot comparing to news characteristics

```{r}
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(gratifications %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(characteristics, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(characteristics), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.05 | abs(PC2) > 0.05)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +
  
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  )

```

### PC and Quadrant Interpretations (for arrows)

- PC1 (Psychological Distance)
  - ⬅️ Partisan/Entertaining
  - ➡️ Factual
- PC2 (Function)
  - ⬆️ ?
  - ⬇️ ?


<div style="text-align:center;">
  <table style="width:70%; margin:auto; text-align:center; border-collapse:collapse; border:1px solid black;">
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↖️<br><strong>Partisan/Entertaining News</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↗️<br><strong>Factual News</strong>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↙️<br><strong>-</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↘️<br><strong>-</strong>
      </td>
    </tr>
  </table>
</div>.

Partisan/Entertaining news = Uplift/Self Affirming; Factual news = Civic Moral


## Biplot comparing to demographics

```{r}
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(gratifications %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(demos, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(demos), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.1 | abs(PC2) > 0.1)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +
  
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  )

```

### PC & Quadrant Interpretations (for arrows)

- PC1 (Age)
  - ⬅️ Millenial
  - ➡️ Boomer
- PC2 (Societal Engagement)
  - ⬆️ High Engagement
  - ⬇️ Low Engagement


<div style="text-align:center;">
  <table style="width:70%; margin:auto; text-align:center; border-collapse:collapse; border:1px solid black;">
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↖️<br><strong>Highly engaged Millenials</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↗️<br><strong>Highly engaged Boomers</strong>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↙️<br><strong>Low engaged Millenials</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↘️<br><strong>Low engaged Boomers</strong>
      </td>
    </tr>
  </table>
</div>.

Millenials = identity-driven needs; Boomers = civic sense making needs

High engagemnet = moral needs; Low engagement = practical needs

# Clustering news characteristics

"Which characteristics are alike in terms of their admirers?"

```{r}
# Create correlation matrix
corrmat <- characteristics %>%
    select(-ResponseId) %>%  
    cor()
```

## Optimal number of clusters

```{r}
#| title: Optimal number of clusters

fviz_nbclust(corrmat, kmeans, method = "silhouette") + ggtitle(label = 'Optimal number of clusters', subtitle = "K Means") 
# fviz_nbclust(corrmat, hcut, method = "silhouette") + ggtitle(label = 'Optimal number of clusters', subtitle = "Hierarchical clustering")
```

```{r}
#| title: HCLust 4
#| fig.width: 12
#| fig.height: 10
#| fig.asp: null
#| eval: false

#run hierarchical clustering
hc = hclust(dist(corrmat), method = 'ward.D')


#plot correlation matrix
heatmaply(corrmat, 
  limits = c(-1,1), 
  Rowv = as.dendrogram(hc),
  Colv = as.dendrogram(hc), 
  k_row = 2,
  k_col = 5,
  colors = colorRampPalette(c("red", "white", "forestgreen"))(200),
  fontsize_row = 8,
  fontsize_col = 8,
  column_text_angle = 90)
```


## K Means 

```{r}
#| title: K Means

#run k-means
k_means = kmeans(corrmat, centers = 5, nstart = 20)

#plot clusters
fviz_cluster(k_means, corrmat, show.clust.cent = F) + 
    theme_classic() +
    geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
    geom_hline(yintercept = 0, linetype = "dashed", color = "grey40")
```

### PC and Quadrant Interpretations

- PC1 (Information type)
  - ⬅️ Partisan/Personality
  - ➡️ Credible
- PC2 (Worldview)
  - ⬆️ Familiar/Comfortable
  - ⬇️ Challenging/Novel


<div style="text-align:center;">
  <table style="width:70%; margin:auto; text-align:center; border-collapse:collapse; border:1px solid black;">
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↖️<br><strong>Comfortable & Partisan</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↗️<br><strong>Credible and Familiar</strong>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↙️<br><strong>Challenging and Entertaining</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↘️<br><strong>Novel and Credible</strong>
      </td>
    </tr>
  </table>
</div>

## Biplot comparing to news topics

```{r}
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(characteristics %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(topics, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(topics), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.00 | abs(PC2) > 0.00)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +
  
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  )

```

### PC and Quadrant Interpretations (for arrows)

- PC1 (Information type)
  - ⬅️ Entertaining
  - ➡️ Trustworthy
- PC2 (Psychological Distance)
  - ⬆️ Immediate/Current Civic Events
  - ⬇️ Broad Systemic Issues


<div style="text-align:center;">
  <table style="width:70%; margin:auto; text-align:center; border-collapse:collapse; border:1px solid black;">
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↖️<br><strong>Comfortable & Partisan</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↗️<br><strong>Credible and Familiar</strong>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↙️<br><strong>Challenging and Entertaining</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↘️<br><strong>Novel and Credible</strong>
      </td>
    </tr>
  </table>
</div>.

Respondents associate most news topics with fact-based, credible qualities rather than partisan or entertaining, with exception of sports. The few pointing up (weather, local, politics) are more habitual current events, the rest pointing down are more challenging.


## Biplot comparing to news gratifications

```{r}
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(characteristics %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(gratifications, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(gratifications), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.00 | abs(PC2) > 0.00)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +
  
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  )

```

### PC and Quadrant Interpretations (for arrows)

- PC1 (Orientation)
  - ⬅️ Self-Affirming
  - ➡️ Civic/Relational
- PC2 (Worldview)
  - ⬆️ Validates
  - ⬇️ Challenges


<div style="text-align:center;">
  <table style="width:70%; margin:auto; text-align:center; border-collapse:collapse; border:1px solid black;">
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↖️<br><strong>Validating news</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↗️<br><strong>-</strong>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid black; padding:10px;">
        ↙️<br><strong>Challenging-Moral news</strong>
      </td>
      <td style="border:1px solid black; padding:10px;">
        ↘️<br><strong>Self-Enhancing news</strong>
      </td>
    </tr>
  </table>
</div>


## Biplot comparing to demographics

```{r}
pcs <- prcomp(corrmat, scale. = TRUE)
# proportion of variance explained
var_explained <- pcs$sdev^2 / sum(pcs$sdev^2)
pc1_var <- round(var_explained[1] * 100, 1)
pc2_var <- round(var_explained[2] * 100, 1)

# genre coordinates in PC space
genres <- as.data.frame(pcs$x[, 1:2])
colnames(genres) <- c("PC1", "PC2")
genres$Genre <- rownames(corrmat)
genres$cluster <- factor(k_means$cluster)


hull_points <- genres %>%
  group_by(cluster) %>%
  slice(chull(PC1, PC2))

# Project respondents into genre-PC space
resp_scores <- as.matrix(characteristics %>% select(-ResponseId)) %*% pcs$rotation[,1:2]
resp_scores <- as.data.frame(resp_scores)
colnames(resp_scores) <- c("PC1", "PC2")
resp_scores$ResponseId <- dat$ResponseId

# join dummy-coded demos
resp_scores <- resp_scores %>%
  left_join(demos, by = "ResponseId")

# correlate demographics with respondent PC scores
cont_vars <- setdiff(names(demos), "ResponseId")
demo_cor <- cor(resp_scores[, c("PC1","PC2")],
                resp_scores[, cont_vars],
                use = "pairwise.complete.obs")
demo_cor <- as.data.frame(t(demo_cor))
colnames(demo_cor) <- c("PC1","PC2")
demo_cor$Variable <- rownames(demo_cor)

# Filter for most correlated variables
demo_cor <- demo_cor %>%
  filter(abs(PC1) > 0.05 | abs(PC2) > 0.05)

arrow_scale <- 8

ggplot(genres, aes(x = PC1, y = PC2, color = cluster, shape = cluster)) +
  # genre points
  geom_point(size = 3) +
  geom_text_repel(aes(label = Genre), size = 4) +
  
  # convex hull polygons
  geom_polygon(
      data = hull_points,
      aes(x = PC1, y = PC2, fill = cluster),
      alpha = 0.1
  ) +
  
  # demographic arrows
  geom_segment(data = demo_cor,
               aes(x = 0, y = 0,
                   xend = PC1 * arrow_scale,
                   yend = PC2 * arrow_scale),
               arrow = arrow(length = unit(0.2,"cm")),
               inherit.aes = FALSE,
               color = "black", alpha = 1) +
  
  # demographic labels
  geom_text_repel(data = demo_cor,
                  aes(x = PC1 * (arrow_scale + 0.5),
                      y = PC2 * (arrow_scale + 0.5),
                      label = Variable),
                  inherit.aes = FALSE,
                  size = 4, color = "black", alpha = 1) +
  
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
  theme_classic() +
  theme(legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(size = 15),
        legend.text  = element_text(size = 11))+
  labs(
    x = paste0("PC1 (", pc1_var, "%)"),
    y = paste0("PC2 (", pc2_var, "%)")
  )

```

PC1 divides traditional trust-oriented audiences (right) from expressive, personality-based news consumers (left)

PC2 separates comfort-seeking, familiar news users (top) from those who seek new or challenging perspectives (bottom)